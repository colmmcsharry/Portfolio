@import url('https://fonts.googleapis.com/css?family=Playfair+Display:400,700&display=swap');
@import url('https://fonts.googleapis.com/css?family=Cinzel+Decorative:400,700&display=swap');



@media screen and (max-width: 450px) {
html  {font-size:.8rem;}
 }

html,
body {
width: 100%;
height: 100%;
}

body{
  background:#222;
}

h1, h2 {color:#3EE7AD ;
 /* color:white;*/
position:relative;
font-family: Cinzel Decorative;
width:50rem;
}

p{font-size:3rem;
color:red;

}

h1 {font-size:5rem;
font-weight: bold;}

h2{font-size:3rem;}


#hi, #welcome {transition: color 2s;
z-index:5;}

#intro {
  text-align: center;
position:absolute;
top:2%;
left:40%;
z-index:30;}

#window{
width: 100%;
height: 100vh;
top:0;
left:0;
min-width: 100%;
min-height: 100%;
position:absolute;
transition: background 2s;
background-image: url('./dktrns.png');
background-size: cover;
z-index:-5;
}


input {
  position: relative;;
  left: -9999px;
}

label {
  display: block;
  height:50px;
  width:50px;
  position: static;
  cursor: pointer;
  background: url('./sun.png');
  background-size:cover;
}

input:checked + label {
  background-image: url('https://www.pinclipart.com/picdir/big/5-52873_rain-clipart-file-folder-emojis-clip-art-png.png');
 background-size:cover; 
 transition: background 2s;
}


input:checked ~ #window {
  background-image: url('./br.png');
}

input:checked ~ #window > #rain {
  display:none;
}

input:checked ~ #intro > * {
  
  opacity: 0;
  transition: opacity 2s
}

input:checked ~ #intro2 > * {
  text-shadow: 0px 0px 10px rgba(255,255,255,0.6), 0px 0px 30px rgba(255,255,255,0.4), 0px 0px 50px rgba(255,255,255,0.3), 0px 0px 180px rgba(255,255,255,0.3);
  color: rgba(255,255,255,0.1);
  opacity: .9 !important ;
  font-family:'ChunkFiveRegular';
  transition: opacity 2s;
  z-index:50;
}

#hi2, #welcome2 {transition: color 2s;
z-index:30;
opacity:0;
color:red;}

#hi2{font-size:6em;
font-weight:bold;}

#intro2 {
  text-align: center;
position:absolute;
top:2%;
left:40%;
z-index:32;
}


/*h2 {color: white;}*/

/*these are basically reusable variables, SCSS*/
$width:100vw;
$height:100vh;

//number of raindrops
$raindrops:20;



#first {
position:relative;
display:block;
top:900px;}




.preview {height:20rem;
width:20rem;
margin:5rem;}

.preview:hover {
  cursor:pointer;
}

h3 {color:green;
position:relative;
display: block;
top:40rem;}












/*image transitions starts*/

.image-container {
  position: relative;
  
  img {
    height:20rem;
    width:20rem;
    margin:5rem;
    position: absolute;
    animation-name: multiple-image-crossfade;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    animation-duration: 8s;
    &:nth-of-type(1) {
      animation-delay: 6s;
    }
    &:nth-of-type(2) {
      animation-delay: 4s;
    }
    &:nth-of-type(3) {
      animation-delay: 2s;
    }
    &:nth-of-type(4) {
      animation-delay: 0;
    }
  }
}

@keyframes multiple-image-crossfade {
  0% {
    opacity:1;
  }
  17% {
    opacity:1;
  }
  25% {
    opacity:0;
  }
  92% {
    opacity:0;
  }
  100% {
    opacity:1;
  }
}

/*image transitions ends*/











// set all the containers to
// position:absolute, since 
// they will overlap
.raindrops,
.borders,
.drops{
  position:absolute;
}

// little brightness filter so our raindrops look shiny
.drops{
  filter:brightness(1.2);
}

// general settings for all the 
// raindrops and borders
.raindrop{
  opacity:0.5;
  position:absolute;
  border-radius:100%;
  background-image:url('./window2.jpg');
  background-size:$width*0.05 $height*0.05;
  background-position:50%;
  transform:rotate(180deg) rotateY(0);
}
.border{
  opacity:0.5;
  position:absolute;
  margin-left:2px; 
  margin-top:1px;
  border-radius:100%;
  box-shadow:0 0 0 1.5px rgba(0,0,0,0.5);
  transform:rotateY(0);
}

// looping through each one of them
@for $i from 1 through $raindrops{

  // generates a random number from 0 to 1, for the positioning
  $x:random();
  $y:random();

  // Random raindrop size and stretching.
  // Since each raindrop has different sizes, we'll do our sizing calculations here instead of on the main .raindrop selector
  $drop-width:5px+random(11);
  $drop-stretch:0.7+(random()*0.5);
  $drop-delay: (random()*2.5) + 1;
  $drop-height:$drop-width*$drop-stretch;
  .raindrop:nth-child(#{$i}){
    // multiply the random position value by the container's size
    left:$x * $width;
    top:$y * $height;
    
    width:$drop-width;
    height:$drop-height;
    background-position:percentage($x) percentage($y);
    animation: #{$drop-delay}s falling 1s ease-in infinite;
  }

  .border:nth-child(#{$i}){
    // we'll do the same positioning for the drop's border
    left:$x * $width;
    top:$y * $height;

    width:$drop-width - 4;
    height:$drop-height;
    animation: #{$drop-delay}s falling 1s ease-in infinite;
  }
}

@keyframes falling {
  from {
    
  }
  to {
    transform: translateY(500px);
  }
}



















/*
@media screen and (max-width: 450px) {
button  {height: 3rem;
width:3rem;}
 }
*/












